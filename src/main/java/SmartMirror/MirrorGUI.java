/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package SmartMirror;

import java.awt.Color;
import java.awt.*;
import javax.swing.*;
import SmartMirror.SmartMirrorClient;
import static java.lang.Thread.sleep;
import javax.swing.ImageIcon;
import javax.swing.JLabel;




/**
 *
 * @author Paul
 */
public class MirrorGUI extends javax.swing.JFrame {
    
    public SmartMirrorClient client;
    
    
    /**
     * Creates new form MirrorGUI
     */
    public MirrorGUI() {
        initComponents();
        
    }
    
    public MirrorGUI(SmartMirrorClient client) {
        this();
        this.client = client;
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        powerBtn = new javax.swing.JButton();
        powerLight = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        infoArea = new javax.swing.JTextArea();
        appointmentsBtn = new javax.swing.JButton();
        newsUpdatesBtn = new javax.swing.JButton();
        jRadioButton1 = new javax.swing.JRadioButton();
        jRadioButton2 = new javax.swing.JRadioButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        powerBtn.setText("Power");
        powerBtn.setActionCommand("powerBtn");
        powerBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                powerBtnMouseClicked(evt);
            }
        });

        powerLight.setFont(new java.awt.Font("Arial", 1, 60)); // NOI18N
        powerLight.setForeground(new java.awt.Color(255, 0, 0));
        powerLight.setText("*");

        jScrollPane1.setBorder(null);

        infoArea.setColumns(10);
        infoArea.setFont(new java.awt.Font("Arial", 1, 10)); // NOI18N
        infoArea.setForeground(new java.awt.Color(102, 102, 102));
        infoArea.setRows(5);
        infoArea.setBorder(null);
        infoArea.setOpaque(false);
        jScrollPane1.setViewportView(infoArea);

        appointmentsBtn.setText("Appointments");
        appointmentsBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                appointmentsBtnMouseClicked(evt);
            }
        });

        newsUpdatesBtn.setText("News Updates");
        newsUpdatesBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                newsUpdatesBtnMouseClicked(evt);
            }
        });

        jRadioButton1.setText("Tech News");

        jRadioButton2.setText("Stock News");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(37, 37, 37)
                        .addComponent(newsUpdatesBtn)
                        .addGap(28, 28, 28)
                        .addComponent(appointmentsBtn)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 587, Short.MAX_VALUE)
                        .addComponent(powerBtn)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(powerLight))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jRadioButton1)
                                .addGap(18, 18, 18)
                                .addComponent(jRadioButton2))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 362, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(newsUpdatesBtn)
                            .addComponent(appointmentsBtn))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 321, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jRadioButton1)
                            .addComponent(jRadioButton2)))
                    .addComponent(powerLight, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(powerBtn))
                .addContainerGap(13, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void powerBtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_powerBtnMouseClicked
        // TODO add your handling code here:
        client.switchOnOff();
        
      
    }//GEN-LAST:event_powerBtnMouseClicked

    private void newsUpdatesBtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_newsUpdatesBtnMouseClicked
        client.getNewsUpdates();
    }//GEN-LAST:event_newsUpdatesBtnMouseClicked

    private void appointmentsBtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_appointmentsBtnMouseClicked
        client.getAppointments();
    }//GEN-LAST:event_appointmentsBtnMouseClicked

    public void changePwrColor (Boolean status) {
        
//        Point pt = powerLight.getLocation();
//        int x = pt.x;
//        int y = pt.y;
//        
//        for ( int i = 0; i<=10; i++) {
//            x = x - 10;
//            System.out.println(powerLight.getLocation());
//            sleep(500);
//          powerLight.setLocation(x, y);
//            
//        }
        
//        powerLight.setLocation(x, y);
        if(!status.equals(true)){
            powerLight.setForeground(Color.red);
            powerLight.setAlignmentX(10);
            clear();
        }
        else {
        powerLight.setForeground(Color.GREEN);
         client.getAppointments();
        }
    }
    
    public void appendAppoints(String a) {
       
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MirrorGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MirrorGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MirrorGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MirrorGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MirrorGUI().setVisible(true);
            }
        });
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton appointmentsBtn;
    private javax.swing.JTextArea infoArea;
    private javax.swing.JRadioButton jRadioButton1;
    private javax.swing.JRadioButton jRadioButton2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton newsUpdatesBtn;
    private javax.swing.JButton powerBtn;
    private javax.swing.JLabel powerLight;
    // End of variables declaration//GEN-END:variables

//    public void append(String string) {
//        infoField.append("\n" + string);
//    }

    public void append(String string) {
        infoArea.append(string +"\n\n");
    }

    public void clear() {
        infoArea.setText("");
    }
}
